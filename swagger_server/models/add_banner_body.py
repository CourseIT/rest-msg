# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AddBannerBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    swagger_types = {
        'app_codes': List[str],
        'date_start': datetime,
        'date_finish': datetime,
        'msg': str
    }

    attribute_map = {
        'app_codes': 'app_codes',
        'date_start': 'date_start',
        'date_finish': 'date_finish',
        'msg': 'msg'
    }

    def __init__(self, app_codes: List[str] = None, date_start: datetime = None, date_finish: datetime = None,
                 msg: str = None):  # noqa: E501
        """AddBannerBody - a model defined in Swagger

        :param app_codes: The app_codes of this AddBannerBody.  # noqa: E501
        :type app_codes: List[str]
        :param date_start: The date_start of this AddBannerBody.  # noqa: E501
        :type date_start: datetime
        :param date_finish: The date_finish of this AddBannerBody.  # noqa: E501
        :type date_finish: datetime
        :param msg: The msg of this AddBannerBody.  # noqa: E501
        :type msg: str
        """

        self._app_codes = app_codes
        self._date_start = date_start
        self._date_finish = date_finish
        self._msg = msg

    @classmethod
    def from_dict(cls, dikt) -> 'AddBannerBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AddBannerBody of this AddBannerBody.  # noqa: E501
        :rtype: AddBannerBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_codes(self) -> List[str]:
        """Gets the app_codes of this AddBannerBody.

        Список кодов систем  # noqa: E501

        :return: The app_codes of this AddBannerBody.
        :rtype: List[str]
        """
        return self._app_codes

    @app_codes.setter
    def app_codes(self, app_codes: List[str]):
        """Sets the app_codes of this AddBannerBody.

        Список кодов систем  # noqa: E501

        :param app_codes: The app_codes of this AddBannerBody.
        :type app_codes: List[str]
        """
        if app_codes is None:
            raise ValueError("Invalid value for `app_codes`, must not be `None`")  # noqa: E501

        self._app_codes = app_codes

    @property
    def date_start(self) -> datetime:
        """Gets the date_start of this AddBannerBody.

        Дата и время начала работ  # noqa: E501

        :return: The date_start of this AddBannerBody.
        :rtype: datetime
        """
        return self._date_start

    @date_start.setter
    def date_start(self, date_start: datetime):
        """Sets the date_start of this AddBannerBody.

        Дата и время начала работ  # noqa: E501

        :param date_start: The date_start of this AddBannerBody.
        :type date_start: datetime
        """
        if date_start is None:
            raise ValueError("Invalid value for `date_start`, must not be `None`")  # noqa: E501

        self._date_start = date_start

    @property
    def date_finish(self) -> datetime:
        """Gets the date_finish of this AddBannerBody.

        Дата и время окончания работ  # noqa: E501

        :return: The date_finish of this AddBannerBody.
        :rtype: datetime
        """
        return self._date_finish

    @date_finish.setter
    def date_finish(self, date_finish: datetime):
        """Sets the date_finish of this AddBannerBody.

        Дата и время окончания работ  # noqa: E501

        :param date_finish: The date_finish of this AddBannerBody.
        :type date_finish: datetime
        """
        if date_finish is None:
            raise ValueError("Invalid value for `date_finish`, must not be `None`")  # noqa: E501

        self._date_finish = date_finish

    @property
    def msg(self) -> str:
        """Gets the msg of this AddBannerBody.

        Текст сообщения  # noqa: E501

        :return: The msg of this AddBannerBody.
        :rtype: str
        """
        return self._msg

    @msg.setter
    def msg(self, msg: str):
        """Sets the msg of this AddBannerBody.

        Текст сообщения  # noqa: E501

        :param msg: The msg of this AddBannerBody.
        :type msg: str
        """

        self._msg = msg
